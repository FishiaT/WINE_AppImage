# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build-staging:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Prerequisites
        run: |
          wget -q "https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.3/appimage-builder-1.0.3-x86_64.AppImage" -O appimage-builder ; chmod +x appimage-builder ; ./appimage-builder --appimage-extract &>/dev/null
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/
          echo "WINE_VER=staging_$(wget -qO- https://github.com/mmtrt/Wine-Builds/releases/expanded_assets/latest | grep -Eo '/wine-[0-9].*xz"' | cut -d'-' -f2 | head -1)" >> $GITHUB_ENV

      - name: Build appimage
        run: |
          # add custom mksquashfs
          cp runtime/mksquashfs squashfs-root/usr/bin/mksquashfs

          # force zstd format in appimagebuilder for appimages
          rm appimage-builder ; sed -i 's|xz|zstd|' squashfs-root/usr/lib/python3.8/site-packages/appimagebuilder/modules/prime/appimage_primer.py

          squashfs-root/AppRun --recipe wine-staging.yml

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: /home/runner/work/WINE_AppImage/WINE_AppImage/*.AppImage

  build-soda:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Prerequisites
        run: |
          wget -q "https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.3/appimage-builder-1.0.3-x86_64.AppImage" -O appimage-builder ; chmod +x appimage-builder ; ./appimage-builder --appimage-extract &>/dev/null
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/

          # staging
          echo "WINE_VER=soda" >> $GITHUB_ENV

      - name: Build appimage
        run: |
          # add custom mksquashfs
          cp runtime/mksquashfs squashfs-root/usr/bin/mksquashfs

          # force zstd format in appimagebuilder for appimages
          rm appimage-builder ; sed -i 's|xz|zstd|' squashfs-root/usr/lib/python3.8/site-packages/appimagebuilder/modules/prime/appimage_primer.py

          squashfs-root/AppRun --recipe wine-soda.yml

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: /home/runner/work/WINE_AppImage/WINE_AppImage/*.AppImage

  build-kron4ek:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Prerequisites
        run: |
          wget -q "https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.3/appimage-builder-1.0.3-x86_64.AppImage" -O appimage-builder ; chmod +x appimage-builder ; ./appimage-builder --appimage-extract &>/dev/null
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/

          # staging
          echo "WINE_VER=kron4ek-tkg" >> $GITHUB_ENV

      - name: Build appimage
        run: |
          # add custom mksquashfs
          cp runtime/mksquashfs squashfs-root/usr/bin/mksquashfs

          # force zstd format in appimagebuilder for appimages
          rm appimage-builder ; sed -i 's|xz|zstd|' squashfs-root/usr/lib/python3.8/site-packages/appimagebuilder/modules/prime/appimage_primer.py

          squashfs-root/AppRun --recipe wine-kron4ek-tkg.yml

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: /home/runner/work/WINE_AppImage/WINE_AppImage/*.AppImage